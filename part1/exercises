1.1
adarautiainen@Adas-MacBook-Air devops % docker ps -a
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS                     PORTS     NAMES
9c9b89bce7bc   python    "python3"                2 minutes ago   Exited (0) 2 minutes ago             zen_buck
4f7ae18df4fa   ubuntu    "/bin/bash"              3 minutes ago   Exited (0) 3 minutes ago             laughing_haibt
2ff52b3042d7   nginx     "/docker-entrypoint.…"   6 minutes ago   Up 6 minutes               80/tcp    dreamy_kalam
adarautiainen@Adas-MacBook-Air devops % 

1.2
adarautiainen@Adas-MacBook-Air devops % docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
adarautiainen@Adas-MacBook-Air devops % 

adarautiainen@Adas-MacBook-Air devops % docker images
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE
adarautiainen@Adas-MacBook-Air devops % 

1.3 
adarautiainen@Adas-MacBook-Air ~ % docker exec -it boring_jennings /bin/bash
root@f62e520edd44:/usr/src/app# tail -f ./text.log
2024-02-01 12:23:56 +0000 UTC
2024-02-01 12:23:58 +0000 UTC
Secret message is: 'You can find the source code here: https://github.com/docker-hy'
2024-02-01 12:24:00 +0000 UTC
2024-02-01 12:24:02 +0000 UTC
2024-02-01 12:24:04 +0000 UTC
2024-02-01 12:24:06 +0000 UTC
2024-02-01 12:24:08 +0000 UTC

1.4
sh -c 'while true; do echo "Input website:"; read website; echo "Searching.."; sleep 1; curl http://$website; done'
Input website:
helsinki.fi
Searching..
<html>
<head><title>301 Moved Permanently</title></head>
<body>
<center><h1>301 Moved Permanently</h1></center>
<hr><center>nginx/1.22.1</center>
</body>
</html>

1.5 
adarautiainen@Adas-MacBook-Air ~ % docker images
REPOSITORY                          TAG       IMAGE ID       CREATED       SIZE
devopsdockeruh/simple-web-service   ubuntu    4e3362e907d5   2 years ago   83MB
devopsdockeruh/simple-web-service   alpine    fd312adc88e0   2 years ago   15.7MB

1.6
Give me the password: basics
You found the correct password. Secret message is:
"This is the secret message"

1.7 
dockerfile:
FROM ubuntu:20.04

WORKDIR /usr/src/app

RUN apt-get update && \
    apt-get install -y curl

COPY exercise .

RUN chmod +x exercise

CMD ["/usr/src/app/exercise"]

1.8
Dockerfile:
FROM devopsdockeruh/simple-web-service:alpine

CMD ["server"]

Command: docker run -d -p 8080:8080 --name web-server-instance web-server

1.9

docker run -v "$(pwd):/text.log:/mydir/text.log

1.10

docker run -p 8080:8080 —name web-service devopsdockeruh/simple-web-service server

1.11
dockerfile:
FROM openjdk:8-jdk-alpine

WORKDIR /usr/src/app

COPY . .

RUN ./mvnw package

EXPOSE 8080

CMD ["java", "-jar", "./target/docker-example-1.1.3.jar"]

1.12
Dockerfile:
FROM node:16

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm install

COPY . .

RUN npm run build

RUN npm install -g serve

EXPOSE 5001

CMD ["serve", "-s", "-l", "5001", "build"]

1.13

Dockerfile:

FROM golang:1.16

WORKDIR /usr/src/app

COPY . .

RUN go build

EXPOSE 8080

CMD ["./server"]

command: docker build . -t example-backend && docker run -p 8080:8080 example-backend  

1.14

Backend Dockerfile:
FROM golang:1.16

WORKDIR /usr/src/app

COPY . .

RUN go build

EXPOSE 8080

ENV PORT=8080

ENV REQUEST_ORIGIN=http://localhost:5001

CMD ["./server"]

Frontend dockerfile: 

FROM node:16

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm install

COPY . .

RUN npm run build

RUN npm install -g serve

EXPOSE 5001

ENV REACT_APP_BACKEND_URL=http://localhost:8080

RUN npm run build

CMD ["serve", "-s", "-l", "5001", "build"]

Commands back: docker build . -t exampleback && docker run -p 8080:8080 exampleback
Commands front: docker build . -t examplefront && docker run -p 5001:5001 examplefront

1.15

Link: https://hub.docker.com/r/aaduska/connectfourgame
README.md 

To build Docker image:

1. Clone the repository
2. Build the Docker image, with docker build -t <image_name> . 
3. Run Docker container, with docker run -it <image_name>
